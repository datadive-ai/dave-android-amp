group = ARTIFACT_GROUP
version = ARTIFACT_VERSION


buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = POM_REPOSITORY_NAME
    bintrayName = POM_PACKAGE_NAME

    publishedGroupId = ARTIFACT_GROUP
    libraryName = 'Datadive'
    artifact = POM_PACKAGE_NAME

    libraryDescription = POM_DESCRIPTION

    siteUrl = POM_URL
    gitUrl = POM_SCM_URL

    libraryVersion = version

    developerId = POM_DEVELOPER_ID
    developerName = POM_DEVELOPER_NAME
    developerEmail = POM_DEVELOPER_EMAIL

    licenseName = POM_LICENCE_NAME
    licenseUrl = POM_LICENCE_URL
    allLicenses = [POM_LICENCE]
}

repositories {
    // The order in which you list these repositories matter.
    google()
    jcenter()
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 14
        // Note: Can't target to the latest 29 now, since running Robolectric tests on 29 will
        // require Java 9 above. However, Android Studio will error out when setting up Java to 9
        // above.
        targetSdkVersion 28

        buildConfigField "String", "DATADIVE_VERSION", "\"${version}\""

        testInstrumentationRunner 'androidx.test.ext.junit.runners.AndroidJUnit4'

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    lintOptions {
        abortOnError true
        textReport true
        warningsAsErrors false
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.2'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.robolectric:shadows-maps:3.4-rc2'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'com.google.android:support-v4:r6'
    testImplementation 'com.google.android.gms:play-services-ads:18.3.0'
    testImplementation 'com.google.android.gms:play-services-base:17.1.0'

    testImplementation "junit:junit:4.12"

    // Core library
    testImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'androidx.test:rules:1.2.0'

    // Assertions
    testImplementation 'androidx.test.ext:junit:1.1.1'
}

// ======== For SDK Releases ========
install {
    repositories.mavenInstaller {
        pom.project {
            packaging POM_PACKAGING
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}

artifacts {
//    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}
